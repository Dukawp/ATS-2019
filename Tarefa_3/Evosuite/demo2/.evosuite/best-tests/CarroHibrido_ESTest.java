/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 11:51:32 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CarroHibrido_ESTest extends CarroHibrido_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(117, 117);
      LinkedList<ParDatas> linkedList0 = new LinkedList<ParDatas>();
      CarroHibrido carroHibrido0 = new CarroHibrido("", "", "'sD.!c'.u", 117, 117, 2410.0, 117, coordinate0, false, 117, linkedList0);
      CarroHibrido carroHibrido1 = carroHibrido0.clone();
      assertEquals("", carroHibrido1.getMarca());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(1, 0.0);
      CarroHibrido carroHibrido0 = new CarroHibrido();
      List<ParDatas> list0 = carroHibrido0.getDatasAlugueres();
      CarroHibrido carroHibrido1 = new CarroHibrido("CarroHibrido", "CarroHibrido", "CarroHibrido", 1, 1, 1, 1860, coordinate0, true, (-1), list0);
      CarroHibrido carroHibrido2 = carroHibrido1.clone();
      assertTrue(carroHibrido2.equals((Object)carroHibrido1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-1802), (-1802));
      CarroHibrido carroHibrido0 = new CarroHibrido();
      List<ParDatas> list0 = carroHibrido0.getDatasAlugueres();
      CarroHibrido carroHibrido1 = new CarroHibrido("", "[3pu", "", (-1802), (-1802), (-1802), (-1802), coordinate0, true, (-556), list0);
      CarroHibrido carroHibrido2 = new CarroHibrido(carroHibrido1);
      CarroHibrido carroHibrido3 = carroHibrido2.clone();
      assertFalse(carroHibrido3.equals((Object)carroHibrido0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CarroHibrido carroHibrido0 = new CarroHibrido();
      carroHibrido0.setPosicao((Coordinate) null);
      // Undeclared exception!
      try { 
        carroHibrido0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Veiculo", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 2160.545021309);
      CarroHibrido carroHibrido0 = null;
      try {
        carroHibrido0 = new CarroHibrido("", "", "0#aeW", 0, (-257.8), 405.82315, 688, coordinate0, true, 688, (List<ParDatas>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Veiculo", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CarroHibrido carroHibrido0 = new CarroHibrido();
      boolean boolean0 = carroHibrido0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CarroHibrido carroHibrido0 = new CarroHibrido();
      boolean boolean0 = carroHibrido0.equals(carroHibrido0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CarroHibrido carroHibrido0 = new CarroHibrido();
      List<ParDatas> list0 = carroHibrido0.getDatasAlugueres();
      boolean boolean0 = carroHibrido0.equals(list0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(1.0, 0);
      CarroHibrido carroHibrido0 = new CarroHibrido();
      List<ParDatas> list0 = carroHibrido0.getDatasAlugueres();
      CarroHibrido carroHibrido1 = new CarroHibrido((String) null, (String) null, (String) null, (-425), (-425), (-425), 0, coordinate0, false, 0, list0);
      // Undeclared exception!
      try { 
        carroHibrido1.equals(carroHibrido0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Veiculo", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CarroHibrido carroHibrido0 = new CarroHibrido();
      String string0 = carroHibrido0.toString();
      assertEquals("***** Carro H\u00EDbrido *****\n*****    VE\u00CDCULO    *****\nMarca: \nMatr\u00EDcula: \nNIF do Propriet\u00E1rio: \nVelocidade M\u00E9dia: 0\nPre\u00E7o Base por Km: 0.0\nConsumo: 0.0\nAutonomia: 0\nPosi\u00E7\u00E3o (latitude e longitude): 0, 0\nDispon\u00EDvel: false\nClassifica\u00E7\u00E3o: 0\n", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CarroHibrido carroHibrido0 = new CarroHibrido();
      CarroHibrido carroHibrido1 = carroHibrido0.clone();
      assertEquals(0, carroHibrido1.getAutonomia());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CarroHibrido carroHibrido0 = null;
      try {
        carroHibrido0 = new CarroHibrido((CarroHibrido) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Veiculo", e);
      }
  }
}
