/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 11:55:06 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ComparadorNAluguer_ESTest extends ComparadorNAluguer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ComparadorNAluguer comparadorNAluguer0 = new ComparadorNAluguer();
      TimeZone timeZone0 = TimeZone.getTimeZone(")|/H(2ZbNaP");
      Locale locale0 = Locale.CHINA;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0, locale0);
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      Cliente cliente0 = new Cliente(")|/H(2ZbNaP", ")|/H(2ZbNaP", ")|/H(2ZbNaP", ")|/H(2ZbNaP", ")|/H(2ZbNaP", mockGregorianCalendar0, coordinate0, 465, 465, 243.8294695);
      Cliente cliente1 = new Cliente();
      int int0 = comparadorNAluguer0.compare(cliente0, cliente1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ComparadorNAluguer comparadorNAluguer0 = new ComparadorNAluguer();
      // Undeclared exception!
      try { 
        comparadorNAluguer0.compare((Cliente) null, (Cliente) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ComparadorNAluguer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ComparadorNAluguer comparadorNAluguer0 = new ComparadorNAluguer();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      Coordinate coordinate0 = new Coordinate(30.91, 30.91);
      Cliente cliente0 = new Cliente((String) null, (String) null, (String) null, (String) null, (String) null, mockGregorianCalendar0, coordinate0, (-125), (-125), (-125));
      Cliente cliente1 = new Cliente();
      int int0 = comparadorNAluguer0.compare(cliente0, cliente1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ComparadorNAluguer comparadorNAluguer0 = new ComparadorNAluguer();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      Coordinate coordinate0 = new Coordinate(30.91, 30.91);
      Cliente cliente0 = new Cliente((String) null, (String) null, (String) null, (String) null, (String) null, mockGregorianCalendar0, coordinate0, (-125), (-125), (-125));
      int int0 = comparadorNAluguer0.compare(cliente0, cliente0);
      assertEquals((-1), int0);
  }
}
