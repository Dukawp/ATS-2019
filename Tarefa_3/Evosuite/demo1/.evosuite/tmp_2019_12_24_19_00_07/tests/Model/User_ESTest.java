/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 24 19:12:22 GMT 2019
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Car;
import Model.Client;
import Model.Owner;
import Model.Rental;
import Model.User;
import Utils.Point;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Client client0 = new Client((Point) null, "", "", "", "", (-1779));
      client0.rate((-1779));
      client0.rate(100);
      int int0 = client0.getRates();
      assertEquals((-839), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "f=[o6|W,:9;/@", "IacNg_Ov._mbj/.Mp", "IacNg_Ov._mbj/.Mp", "9b`wN_AZJ@", 1);
      Owner owner0 = new Owner("&Aa`Jt#KTvplZ2", "f=[o6|W,:9;/@", "9b`wN_AZJ@", 1, "9b`wN_AZJ@");
      Car.CarType car_CarType0 = Car.CarType.gas;
      Car car0 = new Car("f=[o6|W,:9;/@", owner0, car_CarType0, (-1487.316410845367), 0.0, (-1487.316410845367), 1, point0, "&Aa`Jt#KTvplZ2");
      Rental rental0 = new Rental(car0, client0, point0);
      client0.rate(rental0, 1, 0);
      assertEquals(100, client0.getRates());
      
      int int0 = owner0.getRates();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Owner owner0 = new Owner("", (String) null, "", 0, (String) null);
      String string0 = owner0.getPasswd();
      assertNull(string0);
      assertEquals(100, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Owner owner0 = new Owner("-F?", "-F?", "-F?", 622, "-F?");
      owner0.getPasswd();
      assertEquals(100, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Owner owner0 = new Owner("", (String) null, "U-9YD}x", 737, "");
      String string0 = owner0.getPasswd();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(100, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Double double0 = new Double(1057.511308435541);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, (String) null, "Model.User", (String) null, "Model.User", (-957));
      String string0 = client0.getEmail();
      assertEquals(100, client0.getRates());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Double double0 = new Double((-2209.59));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "$&q'oi`OK", "$&q'oi`OK", "$&q'oi`OK", "$&q'oi`OK", 62);
      client0.getEmail();
      assertEquals(100, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Double double0 = new Double(616.139858732);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "", "ZW>03$?", "ZW>03$?", "QyfA5=w={0", 0);
      String string0 = client0.getEmail();
      assertEquals(100, client0.getRates());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = Double.valueOf(0.0);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "", "z16$]mt~", (String) null, "hfxSj!iQT)$%c&up@Ed", 0);
      client0.equals(client0);
      assertEquals(100, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Double double0 = new Double((-2643.163769703));
      Point point0 = new Point(double0, double0);
      String string0 = "nH\\uwn#0";
      Client client0 = new Client(point0, string0, "f)usJ_IxDWVfH", string0, "_< I~Hkg3V_Y|2147", (-3441));
      client0.equals("(-2643.16, -2643.16)");
      assertEquals(100, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Owner owner0 = new Owner(")%]0R", ")%]0R", "!", (-1933), "");
      assertEquals(100, owner0.getRates());
      
      owner0.rate(0);
      owner0.clone();
      assertEquals(0, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = new Double(1057.511308435541);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, (String) null, "Model.User", (String) null, "Model.User", (-957));
      User user0 = client0.clone();
      assertEquals(100, user0.getRates());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "f=[o6|W,:9;/@", "IacNg_Ov._mbj/.Mp", "IacNg_Ov._mbj/.Mp", "9b`wN_AZJ@", 1);
      Owner owner0 = new Owner("IacNg_Ov._mbj/.Mp", "f=[o6|W,:9;/@", "9b`wN_AZJ@", 1, "9b`wN_AZJ@");
      Car.CarType car_CarType0 = Car.CarType.gas;
      Car car0 = new Car("f=[o6|W,:9;/@", owner0, car_CarType0, (-1487.316410845367), 0.0, (-1487.316410845367), 1, point0, "IacNg_Ov._mbj/.Mp");
      Rental rental0 = new Rental(car0, client0, point0);
      client0.rate(rental0, 1, (-49));
      owner0.clone();
      assertEquals((-49), owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Client client0 = new Client((Point) null, "[o6Vi[QZ?xS/<9k.T", "d:.dWgF8,QL", "d:.dWgF8,QL", "*YSGiM9", 1);
      Client client1 = new Client((Point) null, "_t9/99?-Mri9PgA", "_t9/99?-Mri9PgA", "FKYLyy+T#I71$Bv", "", (-1807340593));
      // Undeclared exception!
      try { 
        client0.equals(client1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Owner owner0 = new Owner("{_Y#", "{_Y#", "{_Y#", 1379, "{_Y#");
      int int0 = owner0.getRates();
      assertEquals(100, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Client client0 = new Client((Point) null, "[o[Vi[QZ?xS-<9k.T", "", "[o[Vi[QZ?xS-<9k.T", ".dgF8,QL", (-1779));
      // Undeclared exception!
      try { 
        client0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Client", e);
      }
  }
}
