/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 24 19:18:48 GMT 2019
 */

package View.ViewModel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Car;
import Utils.Point;
import View.ViewModel.RentCarSimple;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RentCarSimple_ESTest extends RentCarSimple_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Point point0 = mock(Point.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(point0).toString();
      RentCarSimple rentCarSimple0 = new RentCarSimple(point0, "gas");
      Point point1 = rentCarSimple0.getPoint();
      assertSame(point1, point0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Point point0 = mock(Point.class, new ViolatedAssumptionAnswer());
      RentCarSimple rentCarSimple0 = null;
      try {
        rentCarSimple0 = new RentCarSimple(point0, "Electrico");
        fail("Expecting exception: Throwable");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.ViewModel.RentCarSimple", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Point point0 = mock(Point.class, new ViolatedAssumptionAnswer());
      RentCarSimple rentCarSimple0 = null;
      try {
        rentCarSimple0 = new RentCarSimple(point0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.ViewModel.RentCarSimple", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RentCarSimple rentCarSimple0 = new RentCarSimple((Point) null, "hybrid");
      Car.CarType car_CarType0 = rentCarSimple0.getCarType();
      assertEquals(Car.CarType.hybrid, car_CarType0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RentCarSimple rentCarSimple0 = new RentCarSimple((Point) null, "hybrid");
      Point point0 = rentCarSimple0.getPoint();
      assertNull(point0);
  }
}
