/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 24 19:15:31 GMT 2019
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.User;
import Model.Users;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Users_ESTest extends Users_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Users users0 = new Users();
      // Undeclared exception!
      try { 
        users0.addUser((User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Users", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Users users0 = new Users();
      Users users1 = new Users();
      boolean boolean0 = users0.equals(users1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Users users0 = new Users();
      boolean boolean0 = users0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Users users0 = new Users();
      boolean boolean0 = users0.equals(users0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Users users0 = new Users();
      boolean boolean0 = users0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Users users0 = new Users();
      try { 
        users0.getUser("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Users", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Users users0 = new Users();
      List<String> list0 = users0.getClientIDS();
      assertTrue(list0.isEmpty());
  }
}
