/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 24 19:10:16 GMT 2019
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Car;
import Model.Client;
import Model.Owner;
import Model.Rental;
import Utils.Point;
import java.time.LocalDateTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Rental_ESTest extends Rental_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = new Double(0.1);
      Double double1 = new Double(0.0);
      Point point0 = new Point(double0, double1);
      Client client0 = new Client(point0, "V#T`!gAwP9G:w", "", "V#T`!gAwP9G:w", "nL$hOP 6!3K37", (-1280));
      Owner owner0 = new Owner("Fall", "Model.Rental", "", 4, "=~~j[");
      Car.CarType car_CarType0 = Car.CarType.gas;
      Point point1 = new Point(double1, double1);
      Car car0 = new Car("nL$hOP 6!3K37", owner0, car_CarType0, (-1280), (-38.10953426294685), 0.5, 1135, point1, "fx$ZBLQ_S/yD");
      Rental rental0 = new Rental(car0, client0, point1);
      Rental rental1 = new Rental(car0, client0, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 5555, (String) null);
      Double double0 = Double.valueOf((double) 5555);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, (String) null, "JrIZ/=G^]7T/", "gas", "-w\"/WC)", 5555);
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double1 = new Double((-1222.099875));
      Point point1 = new Point(double1, double1);
      Car car0 = new Car("(5555.00, 5555.00)", owner0, car_CarType0, (-2784), (-1222.099875), -0.0, (-1807340593), point1, "\u001B[?25l");
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.toString();
      assertEquals("Client:        null\nCarro:          (5555.00, 5555.00)\nDono:           \nViagem:         (-1222.10, -1222.10) -> (5555.00, 5555.00)\nTempo a p\u00E9      2396.07 Horas\nTempo Estimado: -3.44 Horas\nCusto Estimado: -11712930.96", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Owner owner0 = new Owner("dp3$^C", "`>.}B&DG;'3\"I/zl", "\n\n", (-4574), " Kk");
      Car.CarType car_CarType0 = Car.CarType.hybrid;
      Double double0 = new Double(0.5);
      Double double1 = new Double(0.35);
      Point point0 = new Point(double0, double1);
      Car car0 = new Car("\n\n", owner0, car_CarType0, (-4574), (-4574), (-4574), 1473122002, point0, " Kk");
      Point point1 = new Point(double1, double1);
      Client client0 = new Client(point1, " Kk", "!@Z[o>rptw6$%n3,", "lUPZTu", (String) null, (-4574));
      Rental rental0 = new Rental(car0, client0, point1);
      String string0 = rental0.toParsableUserString();
      assertEquals(" Kk\n\n\n\n(0.50, 0.35)\n(0.35, 0.35)\n0.04\n-0.00\n-686.10\n100", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Owner owner0 = new Owner("\n\n", "\n\n", "y$ZP", 1, "y$ZP");
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = new Double(801.21404894);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("\n\n", owner0, car_CarType0, 1820.3287979769, 1820.3287979769, 1820.3287979769, (-5514), point0, "y$ZP");
      Client client0 = new Client(point0, "\n\n", "4O4", "\n\n", "\n\n", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      rental0.rent();
      rental0.rent();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Owner owner0 = new Owner("ORW", "ORW", "ORW", 68, "ORW");
      Car.CarType car_CarType0 = Car.CarType.any;
      Double double0 = new Double(68);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("ORW", owner0, car_CarType0, 68, 68, 68, 68, point0, "ORW");
      Client client0 = new Client(point0, "ORW", "ORW", "ORW", "ORW", 68);
      Rental rental0 = new Rental(car0, client0, point0);
      rental0.rate(68);
      assertEquals(68, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Double double0 = new Double(0.1);
      Double double1 = new Double(4);
      Point point0 = new Point(double0, double1);
      Client client0 = new Client(point0, "V#T`!gAwP9G:w", "", "V#T`!gAwP9G:w", "nL$hOP 6!3K37", (-1280));
      Owner owner0 = new Owner("Fall", "Model.Rental", "}7*M+pwi", 4, "=~~j[");
      Car.CarType car_CarType0 = Car.CarType.gas;
      Point point1 = new Point(double1, double1);
      Car car0 = new Car("nL$hOP 6!3K37", owner0, car_CarType0, (-1280), (-38.10953426294685), (-8.363650638094057), 1135, point1, "V#T`!gAwP9G:w");
      Rental rental0 = new Rental(car0, client0, point0);
      rental0.rent();
      double double2 = rental0.getPrice();
      assertEquals((-163.489901988042), double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Owner owner0 = new Owner((String) null, "L<S%EL}JmvsyjX", "L<S%EL}JmvsyjX", (-2161), "O carro necessita de ser abastecido\n");
      Car.CarType car_CarType0 = Car.CarType.electric;
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car((String) null, owner0, car_CarType0, (-1831.0688), 0.0, (-2161), (-2161), point0, "L<S%EL}JmvsyjX");
      Client client0 = new Client(point0, "|,NXC}", (String) null, "4-jA}71{%tk/M {BNB:", "4-jA}71{%tk/M {BNB:", (-2161));
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getOwnerID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 1, ", ");
      Car.CarType car_CarType0 = Car.CarType.any;
      Double double0 = new Double(360.3);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 1, 501.3452036, 1, 1, point0, "d6t`_, 'l]F");
      Client client0 = new Client(point0, "", "Custo Total: ", ", ", ", ", 138);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getOwnerID();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = new Double(0.1);
      Double double1 = new Double(4);
      Point point0 = new Point(double0, double1);
      Car.CarType car_CarType0 = Car.CarType.gas;
      Point point1 = new Point(double1, double1);
      Owner owner0 = new Owner("}7*M+pwi", "}7*M+pwi", (String) null, 4, "=~~j[");
      Car car0 = new Car("EA?", owner0, car_CarType0, 1431.014316661214, (-485.88470392047), 4, 4, point1, "nL/hOP 6!3K37");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      double double2 = rental0.getDistance();
      assertEquals(3.9, double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Owner owner0 = new Owner("\n", "\n", "\n", (-1555), "\n");
      Car.CarType car_CarType0 = Car.CarType.electric;
      Double double0 = new Double((-2267.84969018571));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("\n", owner0, car_CarType0, (-2267.84969018571), (-1555), (-1555), 1, point0, "xuKscKr\"ZBa");
      Client client0 = new Client(point0, (String) null, "b9Gz.oM1", "xuKscKr\"ZBa", "\n", 0);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getClientID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Owner owner0 = new Owner("@3=0x`", "o'rjk\"3ja:!1", "o'rjk\"3ja:!1", (-4116), "");
      Car.CarType car_CarType0 = Car.CarType.hybrid;
      Double double0 = new Double((-4116));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("o'rjk\"3ja:!1", owner0, car_CarType0, (-4116), (-4116), (-4116), (-4116), point0, "@3=0x`");
      Client client0 = new Client(point0, "", "@3=0x`", "", (String) null, (-4116));
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getClientID();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Owner owner0 = new Owner((String) null, "L<S%EL}JmvsyjX", "L<S%EL}JmvsyjX", (-2161), "O carro necessita de ser abastecido\n");
      Car.CarType car_CarType0 = Car.CarType.electric;
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car((String) null, owner0, car_CarType0, (-1831.0688), 0.0, (-2161), (-2161), point0, "L<S%EL}JmvsyjX");
      Client client0 = new Client(point0, "|,NXC}", (String) null, "4-jA}71{%tk/M {BNB:", "4-jA}71{%tk/M {BNB:", (-2161));
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getCarID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 784, "");
      Car.CarType car_CarType0 = Car.CarType.hybrid;
      Double double0 = new Double(4.0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 784, 784, 0.0, 784, point0, "mi{5s6");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      String string0 = rental0.getCarID();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.hybrid;
      Double double0 = new Double((-394.318342));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("\n\n", (Owner) null, car_CarType0, 0.0, 0.0, 0.0, 0, point0, "n^m%C;P;<OARta");
      Client client0 = new Client(point0, "n^m%C;P;<OARta", "\n\n", "\n\n", "n^m%C;P;<OARta", 0);
      Rental rental0 = new Rental(car0, client0, point0);
      // Undeclared exception!
      try { 
        rental0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Car", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = new Double((-2266.967485837));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("\n", (Owner) null, car_CarType0, (-2201.08), (-2201.08), (-2201.08), 2398, point0, "\n");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        rental0.toParsableUserRentalString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Car", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Owner owner0 = new Owner("Tempo Total: ", "Tempo Total: ", "Tempo Total: ", 0, "Tempo Total: ");
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("Tempo Total: ", owner0, car_CarType0, 0, 0, 0.0, 0, point0, "");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        rental0.toParsableOwnerRentalString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Rental", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.electric;
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("Hibrido", (Owner) null, car_CarType0, (-1505.9321), 2541.772740635772, 2541.772740635772, 0, point0, "Hibrido");
      Client client0 = new Client(point0, "Hibrido", "Hibrido", "Hibrido", "Hibrido", 0);
      Rental rental0 = new Rental(car0, client0, point0);
      // Undeclared exception!
      try { 
        rental0.rent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Car", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.hybrid;
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car(">[!^?U~7_\"zV)&", (Owner) null, car_CarType0, 2628.9, 2628.9, 2103.187022377425, 2141, point0, ">[!^?U~7_\"zV)&");
      Client client0 = new Client(point0, ">[!^?U~7_\"zV)&", ">[!^?U~7_\"zV)&", "nCkLbWn7n`1z0", "", 4);
      Rental rental0 = new Rental(car0, client0, point0);
      // Undeclared exception!
      try { 
        rental0.rate(4, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Car", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.any;
      Double double0 = new Double((-58));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("18l9_0o#j=?@\"rw", (Owner) null, car_CarType0, (-58), (-58), (-58), (-58), point0, "S9KK^;QA9,M*R]TTyv");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        rental0.getOwnerID();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Car", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 0, "$");
      Car.CarType car_CarType0 = Car.CarType.any;
      Double double0 = new Double(552.784);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("$", owner0, car_CarType0, 0.1, (-91.364735652074), 0.0, 1061, point0, "G|r)");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        rental0.getClientID();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Rental", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Owner owner0 = new Owner("1El9_0o#j=?@\"rw", "1El9_0o#j=?@\"rw", "", (-58), "S9KK^;QA9,M*R]Tyv");
      Car.CarType car_CarType0 = Car.CarType.any;
      Double double0 = new Double((-447));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("1El9_0o#j=?@\"rw", owner0, car_CarType0, (-58), 1070.09871, (-58), (-447), point0, "[0<I#gZj$2C!7~&*");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      Rental rental1 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        rental0.equals(rental1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Rental", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Rental rental0 = null;
      try {
        rental0 = new Rental((Car) null, (Client) null, point0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Rental", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 5555, (String) null);
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = Double.valueOf((double) 5555);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 5555, (-3493.0), 85.135141, 5555, point0, "-w\"/WC)");
      Client client0 = new Client(point0, (String) null, "JrIZ/=G^]7T/", "gas", "-w\"/WC)", 5555);
      Point point1 = point0.clone();
      Rental rental0 = new Rental(car0, client0, point1);
      Rental rental1 = new Rental(car0, client0, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 5555, "");
      Car.CarType car_CarType0 = Car.CarType.any;
      Double double0 = Double.valueOf((double) 5555);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 5555, 5555, 5555, 5555, point0, "");
      Client client0 = new Client(point0, "", "", "", "", 5555);
      Client client1 = client0.clone();
      Rental rental0 = new Rental(car0, client0, point0);
      Rental rental1 = new Rental(car0, client1, point0);
      boolean boolean0 = rental1.equals(rental0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Double double0 = new Double(0.1);
      Double double1 = new Double(0.0);
      Point point0 = new Point(double0, double1);
      Client client0 = new Client(point0, "V#T`!gAwP9G:w", "", "V#T`!gAwP9G:w", "nL$hOP 6!3K37", (-1280));
      Owner owner0 = new Owner("Fall", "Model.Rental", "}7*M+pwi", 4, "=~~j[");
      Car.CarType car_CarType0 = Car.CarType.gas;
      Point point1 = new Point(double1, double1);
      Car car0 = new Car("nL$hOP 6!3K37", owner0, car_CarType0, (-1280), -0.0, (-8.363650638094057), 1135, point1, "V#T`!gAwP9G:w");
      Rental rental0 = new Rental(car0, client0, point1);
      Rental rental1 = new Rental(car0, client0, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Owner owner0 = new Owner("ObKM,", "ObKM,", "ObKM,", 1093, "ObKM,");
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = new Double(1093);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("ObKM,", owner0, car_CarType0, 1093, 1093, 1093, 1093, point0, "ObKM,");
      Client client0 = new Client(point0, "ObKM,", "ObKM,", "ObKM,", "ObKM,", 1093);
      Rental rental0 = new Rental(car0, client0, point0);
      System.setCurrentTimeMillis(1093);
      Rental rental1 = new Rental(car0, client0, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 5555, (String) null);
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = Double.valueOf((double) 5555);
      Point point0 = new Point(double0, double0);
      Point point1 = point0.clone();
      Car car0 = new Car("", owner0, car_CarType0, 5555, (-3493.0), 85.135141, 5555, point1, "-w\"/WC)");
      Client client0 = new Client(point0, (String) null, "JrIZ/=G^]7T/", "gas", "-w\"/WC)", 5555);
      Rental rental0 = new Rental(car0, client0, point1);
      client0.addPendingRental(rental0);
      Rental rental1 = new Rental(car0, client0, point0);
      client0.rate(rental1, 0, (-2784));
      assertEquals((-2784), owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Owner owner0 = new Owner("Tempo a p\u00E9    ` ", "ORW", "ORW", (-32), "Z !uB{h");
      Car.CarType car_CarType0 = Car.CarType.any;
      Double double0 = new Double(1.0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("ORW", owner0, car_CarType0, (-32), (-1321.6444558876221), (-1321.6444558876221), (-32), point0, "Z !uB{h");
      Client client0 = new Client(point0, "ORW", "2+1B=aIt9q", (String) null, "e]>UBs", (-32));
      Rental rental0 = new Rental(car0, client0, point0);
      Car car1 = car0.clone();
      Rental rental1 = new Rental(car1, client0, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 5555, (String) null);
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = Double.valueOf((double) 5555);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 5555, (-3493.0), 85.135141, 5555, point0, "-w\"/WC)");
      Client client0 = new Client(point0, (String) null, "JrIZ/=G^]7T/", "gas", "-w\"/WC)", 5555);
      Rental rental0 = new Rental(car0, client0, point0);
      Rental rental1 = new Rental(car0, client0, point0);
      boolean boolean0 = rental1.equals(rental0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Owner owner0 = new Owner("7,", "7,", "7,", 4, "7,");
      Car.CarType car_CarType0 = Car.CarType.hybrid;
      Double double0 = new Double(4);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("7,", owner0, car_CarType0, 0.0, 4, 0.0, 4, point0, "7,");
      Client client0 = new Client(point0, "7,", "7,", "7,", "7,", 4);
      Rental rental0 = new Rental(car0, client0, point0);
      owner0.addPendingRental(rental0);
      Rental rental1 = new Rental(car0, client0, point0);
      rental1.rent();
      assertFalse(rental1.equals((Object)rental0));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Double double0 = new Double(0.1);
      Double double1 = new Double(4);
      Point point0 = new Point(double0, double1);
      Client client0 = new Client(point0, "nL$hOP 6!3K37", "nL$hOP 6!3K37", "nL$hOP 6!3K37", "nL$hOP 6!3K37", 4);
      Owner owner0 = new Owner("nL$hOP 6!3K37", "nL$hOP 6!3K37", "nL$hOP 6!3K37", 4, "nL$hOP 6!3K37");
      Car.CarType car_CarType0 = Car.CarType.hybrid;
      Point point1 = new Point(double1, double1);
      Car car0 = new Car("nL$hOP 6!3K37", owner0, car_CarType0, 4, 0.1, 4, 4, point1, "nL$hOP 6!3K37");
      Rental rental0 = new Rental(car0, client0, point1);
      Rental rental1 = new Rental(car0, client0, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 5555, (String) null);
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = Double.valueOf((double) 5555);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 5555, (-3493.0), 85.135141, 5555, point0, "-w\"/WC)");
      Client client0 = new Client(point0, (String) null, "JrIZ/=G^]7T/", "gas", "-w\"/WC)", 5555);
      Rental rental0 = new Rental(car0, client0, point0);
      Object object0 = new Object();
      boolean boolean0 = rental0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Owner owner0 = new Owner("Tempo a p\u00E9    ` ", "ORW", "ORW", (-32), "Z !uB{h");
      Car.CarType car_CarType0 = Car.CarType.any;
      Double double0 = new Double(1.0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("ORW", owner0, car_CarType0, (-32), (-1321.6444558876221), (-1321.6444558876221), (-32), point0, "Z !uB{h");
      Client client0 = new Client(point0, "ORW", "2+1B=aIt9q", (String) null, "e]>UBs", (-32));
      Rental rental0 = new Rental(car0, client0, point0);
      boolean boolean0 = rental0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 5555, (String) null);
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = Double.valueOf((double) 5555);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 5555, (-3493.0), 85.135141, 5555, point0, "-w\"/WC)");
      Client client0 = new Client(point0, (String) null, "JrIZ/=G^]7T/", "gas", "-w\"/WC)", 5555);
      Rental rental0 = new Rental(car0, client0, point0);
      boolean boolean0 = rental0.equals(rental0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 5555, (String) null);
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = Double.valueOf((double) 5555);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 5555, (-3493.0), 85.135141, 5555, point0, "-w\"/WC)");
      Client client0 = new Client(point0, (String) null, "JrIZ/=G^]7T/", "gas", "-w\"/WC)", 5555);
      Rental rental0 = new Rental(car0, client0, point0);
      LocalDateTime localDateTime0 = rental0.getDate();
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Owner owner0 = new Owner("1El9_0o#j=?@\"rw", "1El9_0o#j=?@\"rw", "", (-58), "S9KK^;QA9,M*R]Tyv");
      Car.CarType car_CarType0 = Car.CarType.any;
      Double double0 = new Double((-447));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("1El9_0o#j=?@\"rw", owner0, car_CarType0, (-58), 1070.09871, (-58), (-447), point0, "[0<I#gZj$2C!7~&*");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      rental0.rate((-58), (-447));
      assertEquals((-447), owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Owner owner0 = new Owner("Model.Rental", "Model.Rental", "Model.Rental", (-1), "Model.Rental");
      Car.CarType car_CarType0 = Car.CarType.electric;
      Double double0 = new Double((-1114.1));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("Model.Rental", owner0, car_CarType0, (-1), (-1114.1), (-1114.1), 0, point0, "Model.User");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        rental0.toParsableUserString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Rental", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 708, "");
      Car.CarType car_CarType0 = Car.CarType.hybrid;
      Double double0 = new Double(972.83121711);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 0.0, 1.0, 0.5, 1567, point0, "");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        rental0.rate(1567);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Rental", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Owner owner0 = new Owner("1El9_0o#j=?@\"rw", "1El9_0o#j=?@\"rw", "", (-58), "S9KK^;QA9,M*R]Tyv");
      Car.CarType car_CarType0 = Car.CarType.any;
      Double double0 = new Double((-447));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("1El9_0o#j=?@\"rw", owner0, car_CarType0, (-58), 1070.09871, (-58), (-447), point0, "[0<I#gZj$2C!7~&*");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      String string0 = rental0.getOwnerID();
      assertEquals("1El9_0o#j=?@\"rw", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Owner owner0 = new Owner("Custo Total: ", "Custo Total: ", "Custo Total: ", 3, "Custo Total: ");
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = new Double(3);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("Custo Total: ", owner0, car_CarType0, 3, 3, 3, 3, point0, "Custo Total: ");
      Client client0 = new Client(point0, "Custo Total: ", "Custo Total: ", "Custo Total: ", "Custo Total: ", 3);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getClientID();
      assertEquals("Custo Total: ", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Owner owner0 = new Owner("ObKM,", "ObKM,", "ObKM,", 1093, "ObKM,");
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = new Double(1093);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("ObKM,", owner0, car_CarType0, 1093, 1093, 1093, 1093, point0, "ObKM,");
      Client client0 = new Client(point0, "ObKM,", "ObKM,", "ObKM,", "ObKM,", 1093);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.toParsableOwnerRentalString();
      assertEquals("2014-02-14 20:21\nObKM,\nObKM,\n(1093.00, 1093.00)\n(1093.00, 1093.00)\n0.00", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Owner owner0 = new Owner("1El9_0o#j=?@\"rw", "1El9_0o#j=?@\"rw", "", (-58), "S9KK^;QA9,M*R]Tyv");
      Car.CarType car_CarType0 = Car.CarType.any;
      Double double0 = new Double((-447));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("1El9_0o#j=?@\"rw", owner0, car_CarType0, (-58), 1070.09871, (-58), (-447), point0, "[0<I#gZj$2C!7~&*");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      double double1 = rental0.getPrice();
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Owner owner0 = new Owner("7,", "7,", "7,", 4, "7,");
      Car.CarType car_CarType0 = Car.CarType.hybrid;
      Double double0 = new Double(4);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("7,", owner0, car_CarType0, 0.0, 4, 0.0, 4, point0, "7,");
      Client client0 = new Client(point0, "7,", "7,", "7,", "7,", 4);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.toFinalString();
      assertEquals("Tempo Total: 0.00 Horas\nCusto Total: 0.00\n\n\u001B[4m\u001B[0m", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Owner owner0 = new Owner("Model.Rental", "Model.Rental", "Model.Rental", (-1), "Model.Rental");
      Car.CarType car_CarType0 = Car.CarType.electric;
      Double double0 = new Double((-1114.1));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("Model.Rental", owner0, car_CarType0, (-1), (-1114.1), (-1114.1), 0, point0, "Model.User");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      String string0 = rental0.getCarID();
      assertEquals("Model.Rental", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Owner owner0 = new Owner("ObKM,", "ObKM,", "ObKM,", 1093, "ObKM,");
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = new Double(1093);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("ObKM,", owner0, car_CarType0, 1093, 1093, 1093, 1093, point0, "ObKM,");
      Client client0 = new Client(point0, "ObKM,", "ObKM,", "ObKM,", "ObKM,", 1093);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.toParsableUserRentalString();
      assertEquals("2014-02-14 20:21\nObKM,\nObKM,\n(1093.00, 1093.00)\n(1093.00, 1093.00)\n0.00", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Owner owner0 = new Owner("ObKM,", "ObKM,", "ObKM,", 1093, "ObKM,");
      Car.CarType car_CarType0 = Car.CarType.gas;
      Double double0 = new Double(1093);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("ObKM,", owner0, car_CarType0, 1093, 1093, 1093, 1093, point0, "ObKM,");
      Client client0 = new Client(point0, "ObKM,", "ObKM,", "ObKM,", "ObKM,", 1093);
      Rental rental0 = new Rental(car0, client0, point0);
      double double1 = rental0.getDistance();
      assertEquals(0.0, double1, 0.01);
  }
}
