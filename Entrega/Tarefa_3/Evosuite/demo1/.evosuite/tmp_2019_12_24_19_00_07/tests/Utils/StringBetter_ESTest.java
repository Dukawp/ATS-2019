/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 24 19:18:45 GMT 2019
 */

package Utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Utils.StringBetter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringBetter_ESTest extends StringBetter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.repeat(5151);
      StringBetter stringBetter2 = stringBetter0.black();
      StringBetter stringBetter3 = stringBetter1.blue();
      StringBetter stringBetter4 = stringBetter3.roxo();
      stringBetter0.bold();
      StringBetter stringBetter5 = stringBetter1.red();
      stringBetter5.white();
      stringBetter0.getStr();
      stringBetter5.append("");
      StringBetter stringBetter6 = stringBetter0.hide_cursor();
      stringBetter0.cyan();
      StringBetter stringBetter7 = stringBetter2.append(" G425vp`o");
      stringBetter7.grey();
      stringBetter4.show_cursor();
      StringBetter stringBetter8 = stringBetter6.roxo();
      stringBetter8.bold();
      // Undeclared exception!
      stringBetter4.repeat(5151);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.under();
      StringBetter stringBetter2 = stringBetter1.green();
      StringBetter stringBetter3 = stringBetter2.repeat(478);
      StringBetter stringBetter4 = stringBetter3.grey();
      StringBetter stringBetter5 = stringBetter4.red();
      stringBetter5.repeat(478);
      stringBetter5.blink();
      StringBetter stringBetter6 = stringBetter5.bold();
      StringBetter stringBetter7 = stringBetter6.repeat(478);
      // Undeclared exception!
      stringBetter7.repeat(279);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter("");
      StringBetter stringBetter1 = stringBetter0.show_cursor();
      StringBetter stringBetter2 = stringBetter1.grey();
      StringBetter stringBetter3 = stringBetter2.red();
      stringBetter3.bold();
      stringBetter0.toString();
      stringBetter3.append((String) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.under();
      StringBetter stringBetter2 = stringBetter1.append("");
      StringBetter stringBetter3 = stringBetter2.green();
      stringBetter3.toString();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter("5ZR1wPE\";|{O)-\"");
      StringBetter stringBetter1 = stringBetter0.grey();
      StringBetter stringBetter2 = stringBetter1.blue();
      StringBetter stringBetter3 = stringBetter2.red();
      StringBetter stringBetter4 = stringBetter3.hide_cursor();
      StringBetter stringBetter5 = stringBetter4.black();
      stringBetter5.show_cursor();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter("\u001B[35m");
      stringBetter0.hide_cursor();
      stringBetter0.blink();
      stringBetter0.white();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter("n1`SrDM=)3]n");
      StringBetter stringBetter1 = stringBetter0.white();
      StringBetter stringBetter2 = stringBetter1.orange();
      StringBetter stringBetter3 = stringBetter2.blue();
      stringBetter3.cyan();
      stringBetter2.show_cursor();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.bold();
      StringBetter stringBetter2 = stringBetter1.blink();
      StringBetter stringBetter3 = stringBetter2.cyan();
      StringBetter stringBetter4 = stringBetter3.blue();
      StringBetter stringBetter5 = stringBetter4.repeat(0);
      stringBetter5.red();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.roxo();
      StringBetter stringBetter2 = stringBetter1.black();
      StringBetter stringBetter3 = stringBetter2.blue();
      stringBetter3.append("");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter("<");
      StringBetter stringBetter1 = stringBetter0.hide_cursor();
      StringBetter stringBetter2 = stringBetter1.cyan();
      stringBetter2.repeat(2245);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.under();
      stringBetter1.grey();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.blink();
      stringBetter1.toString();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.hide_cursor();
      StringBetter stringBetter2 = stringBetter1.blue();
      StringBetter stringBetter3 = stringBetter2.bold();
      stringBetter3.getStr();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.roxo();
      StringBetter stringBetter2 = stringBetter1.hide_cursor();
      stringBetter2.cyan();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      stringBetter0.orange();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter((String) null);
      StringBetter stringBetter1 = stringBetter0.black();
      stringBetter1.blue();
      stringBetter0.toString();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.red();
      StringBetter stringBetter2 = stringBetter1.show_cursor();
      stringBetter2.append("\u001B[?25l");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter("");
      StringBetter stringBetter1 = stringBetter0.white();
      StringBetter stringBetter2 = stringBetter1.repeat((-210));
      stringBetter2.green();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      stringBetter0.grey();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.show_cursor();
      stringBetter1.white();
      StringBetter stringBetter2 = stringBetter1.orange();
      StringBetter stringBetter3 = stringBetter2.cyan();
      stringBetter3.black();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.under();
      StringBetter stringBetter2 = stringBetter1.green();
      StringBetter stringBetter3 = stringBetter2.repeat(478);
      StringBetter stringBetter4 = stringBetter3.grey();
      StringBetter stringBetter5 = stringBetter4.red();
      stringBetter5.repeat(478);
      StringBetter stringBetter6 = stringBetter5.blink();
      stringBetter5.bold();
      StringBetter stringBetter7 = stringBetter5.red();
      StringBetter stringBetter8 = stringBetter7.repeat(279);
      stringBetter2.blink();
      stringBetter8.repeat(0);
      stringBetter5.green();
      StringBetter stringBetter9 = stringBetter6.bold();
      stringBetter6.toString();
      stringBetter9.orange();
      assertEquals("\u001B[32m\u001B[4m\u001B[0m\u001B[0m", stringBetter2.getStr());
      assertEquals("\u001B[4m\u001B[0m", stringBetter1.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      String string0 = stringBetter0.getStr();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.blink();
      StringBetter stringBetter2 = stringBetter1.roxo();
      assertEquals("\u001B[35m\u001B[5m\u001B[0m\u001B[0m", stringBetter2.getStr());
      
      StringBetter stringBetter3 = stringBetter0.hide_cursor();
      StringBetter stringBetter4 = stringBetter3.cyan();
      stringBetter4.append("");
      stringBetter4.blink();
      StringBetter stringBetter5 = stringBetter4.white();
      assertEquals("\u001B[38m\u001B[36m\u001B[?25l\u001B[0m\u001B[0m", stringBetter5.getStr());
      
      StringBetter stringBetter6 = stringBetter0.blink();
      assertEquals("\u001B[5m\u001B[0m", stringBetter6.getStr());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringBetter stringBetter0 = new StringBetter();
      StringBetter stringBetter1 = stringBetter0.blue();
      String string0 = stringBetter1.toString();
      assertEquals("\u001B[34m\u001B[0m", string0);
  }
}
