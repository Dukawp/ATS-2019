/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 11:50:24 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Coordinate_ESTest extends Coordinate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 287.1946393821464);
      Coordinate coordinate1 = new Coordinate(287.1946393821464, 0.0);
      coordinate1.setLatitude(0.0);
      int int0 = coordinate1.compareTo(coordinate0);
      assertEquals(0.0, coordinate1.getLatitude(), 0.01);
      assertEquals(0.0, coordinate0.getLatitude(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(1.0, 1.0);
      double double0 = coordinate0.getLongitude();
      assertEquals(1.0, coordinate0.getLatitude(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-349.51385), (-349.51385));
      double double0 = coordinate0.getLongitude();
      assertEquals((-349.51385), coordinate0.getLatitude(), 0.01);
      assertEquals((-349.51385), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      double double0 = coordinate0.getLatitude();
      assertEquals(0.0, coordinate0.getLongitude(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-1170.2624860869), (-1170.2624860869));
      double double0 = coordinate0.getLatitude();
      assertEquals((-1170.2624860869), coordinate0.getLongitude(), 0.01);
      assertEquals((-1170.2624860869), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(1.0, 0.0);
      Coordinate coordinate1 = new Coordinate(1000.0, 797.869307);
      double double0 = coordinate0.getDistancia(coordinate1);
      assertEquals(1000.0, coordinate1.getLatitude(), 0.01);
      assertEquals(797.869307, coordinate1.getLongitude(), 0.01);
      assertEquals(601.1701663816491, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      coordinate0.clone();
      assertEquals(0.0, coordinate0.getLatitude(), 0.01);
      assertEquals(0.0, coordinate0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(13.6110681093, 1217.92858691);
      Coordinate coordinate1 = coordinate0.clone();
      assertEquals(13.6110681093, coordinate1.getLatitude(), 0.01);
      assertTrue(coordinate1.equals((Object)coordinate0));
      assertEquals(1217.92858691, coordinate0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      // Undeclared exception!
      try { 
        coordinate0.getDistancia((Coordinate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Coordinate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Coordinate coordinate0 = null;
      try {
        coordinate0 = new Coordinate((Coordinate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Coordinate", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-1.0), 0.0);
      double double0 = coordinate0.getLongitude();
      assertEquals((-1.0), coordinate0.getLatitude(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-1.0), 0.0);
      Coordinate coordinate1 = new Coordinate(coordinate0);
      boolean boolean0 = coordinate1.equals(coordinate0);
      assertTrue(boolean0);
      assertEquals((-1.0), coordinate0.getLatitude(), 0.01);
      assertEquals(0.0, coordinate1.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-278.77869), (-73.36));
      String string0 = coordinate0.getLatitudeAsString();
      assertEquals((-73.36), coordinate0.getLongitude(), 0.01);
      assertEquals("-278.77869", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 2117.61027820512);
      String string0 = coordinate0.getLongitudeAsString();
      assertEquals(0.0, coordinate0.getLatitude(), 0.01);
      assertEquals("2117.610278", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-1049.0), 1995.426559555134);
      double double0 = coordinate0.getDistancia(coordinate0);
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1049.0), coordinate0.getLatitude(), 0.01);
      assertEquals(1995.426559555134, coordinate0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(1.0, 808.146517494);
      double double0 = coordinate0.getLatitude();
      assertEquals(808.146517494, coordinate0.getLongitude(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-1.0), (-1.0));
      boolean boolean0 = coordinate0.equals("-1, -1");
      assertEquals((-1.0), coordinate0.getLongitude(), 0.01);
      assertEquals((-1.0), coordinate0.getLatitude(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(719.0, 719.0);
      Coordinate coordinate1 = new Coordinate((-1168.87328290976), 719.0);
      int int0 = coordinate1.compareTo(coordinate0);
      assertEquals((-1168.87328290976), coordinate1.getLatitude(), 0.01);
      assertEquals(719.0, coordinate0.getLongitude(), 0.01);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-1.0), (-1.0));
      int int0 = coordinate0.compareTo(coordinate0);
      assertEquals(0, int0);
      assertEquals((-1.0), coordinate0.getLatitude(), 0.01);
      assertEquals((-1.0), coordinate0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(719.0, 719.0);
      coordinate0.setLongitude(180.0);
      assertEquals(180.0, coordinate0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      CoordinateManager.MAX_LONGITUDE = (-1.0);
      // Undeclared exception!
      try { 
        coordinate0.setLongitude(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The parameter did not pass validation as defined by the CoordinateManager class
         //
         verifyException("Coordinate", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(719.0, 719.0);
      // Undeclared exception!
      try { 
        coordinate0.setLatitude((-1168.87328290976));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The parameter did not pass validation as defined by the CoordinateManager class
         //
         verifyException("Coordinate", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-1.0), (-1.0));
      String string0 = coordinate0.toString();
      assertEquals("-1, -1", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      // Undeclared exception!
      try { 
        coordinate0.compareTo((Coordinate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Coordinate", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-1.0), (-1.0));
      Coordinate coordinate1 = coordinate0.clone();
      assertEquals((-1.0), coordinate1.getLatitude(), 0.01);
      assertEquals((-1.0), coordinate0.getLongitude(), 0.01);
      assertTrue(coordinate1.equals((Object)coordinate0));
  }
}
